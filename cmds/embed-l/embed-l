#!/usr/bin/env -S awk -f ${_} --

BEGIN {
  ######################################################################
  # Parse Options

  # Remove the script path
  delete ARGV[1]

  # Parse Options
  if ( ARGV[2] == "-h" || ARGV[2] == "--help"    ||
       ARGV[2] == "-v" || ARGV[2] == "--version" ||
       ARGC < 4        \
  ){
    print "Usage: embed-l [<label>] <template-file <data-file>"       > "/dev/stderr"
    print "Version: Sat Nov 30 16:32:58 JST 2024 fujis"               > "/dev/stderr"
    print "Homepage: https://github.com/ppdx999/cmdset"               > "/dev/stderr"
    exit 1
  }
  if (ARGC == 4) { # In case of no label provided
    label = "___LABEL___"
    tmplate_file = ARGV[2]; delete ARGV[2]
  } else { # In case of label
    label = ARGV[2]; delete ARGV[2]
    tmplate_file = ARGV[3]; delete ARGV[3]
  }

  ######################################################################
  # Read Template

  # When reading Header, just print it
  while(getline l < tmplate_file) {
    if ( l ~ "^.*" label ".*$" ) { break }
    print l
  }

  # When reading Template, store it
  tmpl = ""
  while(getline l < tmplate_file) {
    if ( l ~ "^.*" label ".*$" ) { break }
    tmpl = tmpl l "\n"
  }
  sub(/\n$/, "", tmpl)

  # When reading Footer, store it
  footer = ""
  while(getline l < tmplate_file) {
    footer = footer l "\n"
  }
  sub(/\n$/, "", footer)

  close(tmplate_file)

}


######################################################################
# Read Data
{
  l = tmpl

  # Embed data into %1, %2, %3, ...
  for (i = 1; i <= NF; i++) { gsub("%" i, $i, l) }

  # Remove unused placeholders
  gsub(/%[0-9]+/, "", l)

  print l
}


END {
  ######################################################################
  # Footer
  if (footer != ""){ print footer }
}
