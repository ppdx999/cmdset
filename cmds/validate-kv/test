#!/bin/sh

tmp=/tmp/$(basename $0).$(date +%s).$$

sed -e '1s/awk/gawk/' validate-kv > $tmp-validate-kv.gawk
chmod +x $tmp-validate-kv.gawk

sed -e '1s/awk/nawk/' validate-kv > $tmp-validate-kv.nawk
chmod +x $tmp-validate-kv.nawk

# We can't use `mawk` because it cannot count multibyte characters correctly.
# sed -e '1s/awk/mawk/' validate-kv > $tmp-validate-kv.mawk
# chmod +x $tmp-validate-kv.mawk

cmds="./validate-kv $tmp-validate-kv.gawk $tmp-validate-kv.nawk"

for cmd in $cmds; do
  # printf "${cmd##*.} : "
  printf "%12s: " ${cmd##*.}

  ls tests | while read dir; do
    # Prepare test
    dir=tests/$dir
    testname=$(basename $dir)
    expected_exit_code=$(cat $dir/exit-code)

    # Run test
    $cmd $dir/rule $dir/data 2> $tmp-$testname-stderr > $tmp-$testname-stdout

    # Check result
    if [ $? -ne $expected_exit_code ]; then echo "$testname ... NG"; exit 1; fi
    # validate-kv output input data to stdout
    diff -u $dir/data $tmp-$testname-stdout
    if [ $? -ne 0 ]; then echo "$testname ... NG"; exit 1; fi
    # validate-kv outputs error messages to stderr
    diff -u $dir/stderr $tmp-$testname-stderr
    if [ $? -ne 0 ]; then echo "$testname ... NG"; exit 1; fi
  done

  if [ $? -eq 0 ]; then echo "OK"; fi
done

rm -f $tmp-*
